version: 2
jobs:
  build:
    machine: true
    steps:
      - checkout

      # setup variables
      - run:
          command: |
            echo "CIRCLE_BRANCH=$CIRCLE_BRANCH"
            echo "CIRCLE_JOB=$CIRCLE_JOB"
            echo "CIRCLE_PROJECT_REPONAME=$CIRCLE_PROJECT_REPONAME"
            echo "CIRCLE_PROJECT_USERNAME=$CIRCLE_PROJECT_USERNAME"
            echo "CIRCLE_REPOSITORY_URL=$CIRCLE_REPOSITORY_URL"
            echo "CIRCLE_USERNAME=$CIRCLE_USERNAME"
            echo "CIRCLE_SHA1=$CIRCLE_SHA1"

      # build the application image
      - run: docker build -t gcr.io/unity-ads-workshop-test/${CIRCLE_PROJECT_USERNAME}-${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1} .

      # authenticate and push image
      - run:
          command: |
            echo ${WORKSHOP_CI_ACCOUNT_TOKEN_BASE64} | base64 --decode > .WORKSHOP_CI_ACCOUNT_TOKEN.json

            echo Authenticating...
            gcloud auth activate-service-account ${WORKSHOP_CI_USER} --key-file=.WORKSHOP_CI_ACCOUNT_TOKEN.json >/dev/null 2>&1
            gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://gcr.io >/dev/null 2>&1

            echo Pushing gcr.io/unity-ads-workshop-test/${CIRCLE_PROJECT_USERNAME}-${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}...
            docker push gcr.io/unity-ads-workshop-test/${CIRCLE_PROJECT_USERNAME}-${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}

            echo Tagging and pushing gcr.io/unity-ads-workshop-test/${CIRCLE_PROJECT_USERNAME}-${CIRCLE_PROJECT_REPONAME}:latest...
            docker tag gcr.io/unity-ads-workshop-test/${CIRCLE_PROJECT_USERNAME}-${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1} gcr.io/unity-ads-workshop-test/${CIRCLE_PROJECT_USERNAME}-${CIRCLE_PROJECT_REPONAME}:latest
            docker push gcr.io/unity-ads-workshop-test/${CIRCLE_PROJECT_USERNAME}-${CIRCLE_PROJECT_REPONAME}:latest

      # deploy to GKE
      - run:
          command: |
            kubectl --help
            # docker run --rm --volume `pwd`:/service gcr.io/unity-ads-workshop-test/workshop-deployer bash -c 'if kubectl get service ${service}-lb -n workshop > /dev/null; then kubectl delete service ${service}-lb -n workshop; fi'
            # docker run --rm --volume `pwd`:/service gcr.io/unity-ads-workshop-test/workshop-deployer bash -c 'kubectl apply -f /service/manifests/service.yaml -f /service/manifests/deployment.yaml'
            # docker run --rm --volume `pwd`:/service gcr.io/unity-ads-workshop-test/workshop-deployer bash -c 'kubectl expose deployment -n workshop ${service} --type=LoadBalancer --name=${service}-lb --port=8080'
            # docker run --rm --volume `pwd`:/service gcr.io/unity-ads-workshop-test/workshop-deployer bash -c 'kubectl get all -n workshop | grep ${service}'
